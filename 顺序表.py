"""

python list：采用分离式技术实现的动态顺序表，特征如下：
1. 元素外置，满足列表内存储不同类型的数据的需要
2. 分离式结构（表对象里只保存与整个表有关的信息（即容量和元素个数），实际数据元素存放在另一个独立的元素存储区里，通过链接与基本表对象关联。）
满足允许任意加入元素，而且在不断加入元素的过程中，表对象的标识（函数id得到的值）不变的需要
3. 动态，分离式结构衍生出的动态扩容能力
4. 顺序表，将元素顺序地存放在一块连续的存储区里，元素间的顺序关系由它们的存储顺序自然表示。满足基于下标（位置）的高效元素访问和更新的需要

python tuple：采用一体式结构实现的顺序表，特征如下：
1. 包含列表的1、4特征
2. 一体式结构（存储表信息的单元与元素存储区以连续的方式安排在一块存储区里，两部分数据的整体形成一个完整的顺序表对象）

python dict:
通过hash处理key值，再取余，以列表形式存储

如果一个对象在其生命周期内有一个固定不变的哈希值 (这需要__hash__()方法) 且可以与其他对象进行比较操作 (这需要__eq__()方法) ，那么这个对象就是可哈希对象 (hashable) 。可哈希对象必须有相同的哈希值才算作相等。
由于字典 (dict) 的键 (key) 和集合 (set) 内部使用到了哈希值，所以只有可哈希 (hashable) 对象才能被用作字典的键和集合的元素。
所有python内置的不可变对象都是可哈希的，同时，可变容器 (比如：列表 (list) 或者字典 (dict) ) 都是不可哈希的。用户自定义的类的实例默认情况下都是可哈希的；它们跟其它对象都不相等 (除了它们自己) ，它们的哈希值来自id()方法。

"""
